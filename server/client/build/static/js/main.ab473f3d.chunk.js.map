{"version":3,"sources":["components/Navbar.js","components/hero/hero.js","components/Flights/FlightsForm.js","services/DateTimeFormating.js","components/Flights/FlightsList.js","containers/Flights.js","containers/Hotels.js","containers/Bikes.js","App.js","serviceWorker.js","index.js"],"names":["CustomNavbar","react_default","a","createElement","Navbar","className","bg","variant","Brand","href","Hero","dist_default","src","this","props","videosrc","h1","h2","Component","FlightsForm","state","flightFrom","flightTo","dateFlightFrom","dateFlightTo","flightsDataInbound","flightsDataOutbound","error","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","axios","post","then","response","refreshflightsList","data","flightFromflightFrom","fromDate","toDate","catch","err","console","log","Form","onSubmit","Row","Col","Label","htmlFor","Control","type","onChange","id","placeholder","Button","getDuration","duration","replace","getDateHour","date","newDate","Date","year","getFullYear","month","getMonth","dt","getDate","hour","getHours","minutes","getMinutes","FlightsList","inboundFlights","length","Table","striped","bordered","hover","colSpan","background-color","map","Flight","Array","isArray","stopsNumber","TotalJourney","Duration","index","rowSpan","MarketingCarrier","AirlineID","FlightNumber","Departure","AirportCode","Arrival","ScheduledTimeLocal","DateTime","outboundFlights","Flights","hero_hero","FlightsForm_FlightsForm","Flights_FlightsList","Hotels","Bikes","App","components_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab473f3d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar } from \"react-bootstrap\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nconst CustomNavbar = () => {\n  return (\n    <Navbar className=\"nav\" bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">myTravelApp v1</Navbar.Brand>\n      <Navbar.Brand href=\"/Flights\">Flights</Navbar.Brand>\n      <Navbar.Brand href=\"/Hotels\">Hotels</Navbar.Brand>\n      <Navbar.Brand href=\"/Bikes\">Bikes</Navbar.Brand>\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React, { Component } from 'react'\nimport \"./hero.css\"\n\nimport BackgroundVideo from 'react-background-video-player';\n\nclass Hero extends Component {\n\n\n\n  render() {\n    return (\n      <div className=\"hero\">\n        <BackgroundVideo\n        src={this.props.videosrc}\n        />\n        <div className=\"hero-text\">\n          <h1>{this.props.h1}</h1>\n          <h2>{this.props.h2}</h2>\n        </div>\n      </div>\n          )\n        }\n      }\n\n      export default Hero;","import React, { Component } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default class FlightsForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: \"\",\n    dateFlightTo: \"\",\n    flightsDataInbound: {},\n    flightsDataOutbound: {},\n    error: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios.post(\"/api/Flights\", {\n      flightFrom: this.state.flightFrom,\n      flightTo: this.state.flightTo,\n      dateFlightFrom: this.state.dateFlightFrom,\n      dateFlightTo: this.state.dateFlightTo\n    })\n    .then(response => {\n      this.props.refreshflightsList(response);\n      this.setState({\n        flightFrom: response.data.flightFromflightFrom,\n        flightTo: response.data.flightTo,\n        dateFlightFrom: response.data.fromDate,\n        dateFlightTo: response.data.toDate,\n        flightsDataInbound: response.data.flightsDataInbound,\n        flightsDataOutbound: response.data.flightsDataOutbound\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col>\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom}\n                placeholder=\"Destination airport IATA Code\"\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo}\n                placeholder=\"Destination airport IATA Code\"\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"dateFlightFrom\">Date From</Form.Label>\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={this.state.dateFlightFrom}\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"dateFlightTo\">Date To</Form.Label>\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={this.state.dateFlightTo}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\">Flight Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","const getDuration = duration => {\n  // Transforms format of durations strings like P1DT5H35M into 1D 5H 35m\n  // Using regular expressions for formating\n\n  duration = duration.replace(/P/, \"\");\n  duration = duration.replace(/T/, \"\");\n  duration = duration.replace(/D/, \"D \");\n  duration = duration.replace(/H/, \"H \");\n  duration = duration.replace(/M/, \"m\");\n  return duration;\n};\n\nconst getDateHour = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 6:20 29/07/2019\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n  let hour = newDate.getHours();\n  let minutes = newDate.getMinutes();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  if (minutes < 10 ) {\n    minutes = \"0\" + minutes;\n  }\n\n  return hour + \":\" + minutes + \" \"+ dt + \"/\" + month + \"/\" + year;\n};\n\nexport { getDuration, getDateHour };\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nconst FlightsList = props => {\n  return (\n    <div>\n      <br />\n      {props.inboundFlights.length > 0 && (\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Inbound Flights</th>\n              <th colSpan=\"6\" background-color=\"transparent\">\n                {\" \"}\n              </th>\n            </tr>\n          </thead>\n          <thead>\n            <tr>\n              <th>Duration</th>\n              <th>Airline</th>\n              <th>Flight</th>\n              <th>Dep Airport</th>\n              <th>Arr Airport</th>\n              <th>Dep</th>\n              <th>Arr</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {props.inboundFlights.map(Flight => {\n              if (Array.isArray(Flight.Flight)) {\n                const stopsNumber = Flight.Flight.length - 1;\n                const duration = getDuration(Flight.TotalJourney.Duration);\n                return Flight.Flight.map((Flight, index) => {\n                  if (index === 0) {\n                    return (\n                      <tr>\n                        <td rowSpan={stopsNumber + 1}>\n                          {duration} <br />\n                          {stopsNumber}\n                          {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                        </td>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  } else {\n                    return (\n                      <tr>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  }\n                });\n              } else {\n                return (\n                  <tr>\n                    <td>\n                      {getDuration(Flight.TotalJourney.Duration)}\n                      <br />\n                      Non-stop\n                    </td>\n                    <td>{Flight.Flight.MarketingCarrier.AirlineID}</td>\n                    <td>{Flight.Flight.MarketingCarrier.FlightNumber}</td>\n                    <td>{Flight.Flight.Departure.AirportCode}</td>\n                    <td>{Flight.Flight.Arrival.AirportCode}</td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Departure.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Arrival.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n        </Table>\n      )}\n\n      <br />\n      {props.inboundFlights.length > 0 && (\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Outbound Flights</th>\n              <th colSpan=\"6\" background-color=\"transparent\">\n                {\" \"}\n              </th>\n            </tr>\n          </thead>\n          <thead>\n            <tr>\n              <th>Duration</th>\n              <th>Airline</th>\n              <th>Flight</th>\n              <th>Dep Airport</th>\n              <th>Arr Airport</th>\n              <th>Dep</th>\n              <th>Arr</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {props.outboundFlights.map(Flight => {\n              if (Array.isArray(Flight.Flight)) {\n                const stopsNumber = Flight.Flight.length - 1;\n                const duration = getDuration(Flight.TotalJourney.Duration);\n                return Flight.Flight.map((Flight, index) => {\n                  if (index === 0) {\n                    return (\n                      <tr>\n                        <td rowSpan={stopsNumber + 1}>\n                          {duration} <br />\n                          {stopsNumber}\n                          {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                        </td>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  } else {\n                    return (\n                      <tr>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  }\n                });\n              } else {\n                return (\n                  <tr>\n                    <td>\n                      {getDuration(Flight.TotalJourney.Duration)}\n                      <br />\n                      Non-stop\n                    </td>\n                    <td>{Flight.Flight.MarketingCarrier.AirlineID}</td>\n                    <td>{Flight.Flight.MarketingCarrier.FlightNumber}</td>\n                    <td>{Flight.Flight.Departure.AirportCode}</td>\n                    <td>{Flight.Flight.Arrival.AirportCode}</td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Departure.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Arrival.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default FlightsList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport FlightsForm from \"../components/Flights/FlightsForm\";\nimport FlightsList from \"../components/Flights/FlightsList\";\n\nexport default class Flights extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: []\n  };\n\n  refreshflightsList = response => {\n      this.setState ({\n        flightsDataInbound: response.data.flightsDataInbound,\n        flightsDataOutbound: response.data.flightsDataOutbound\n      }) \n      console.log(this.state.flightsDataInbound);\n  };\n\n  render() {\n    return (\n      <div>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-1917_small.mp4\"\n          h1=\"Flights\"\n          h2=\"Search for flights\"\n        />\n\n        <FlightsForm refreshflightsList={this.refreshflightsList} />\n        <FlightsList inboundFlights={this.state.flightsDataInbound} outboundFlights={this.state.flightsDataOutbound} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport Hero from \"../components/hero/hero\"\n\nexport default class Hotels extends Component {\n  render() {\n    return (\n      <div>\n         <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-24216_medium.mp4\"\n          h1=\"Hotels\"\n          h2=\"Search for Hotels\"\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Bikes extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Switch,Route } from \"react-router-dom\";\nimport Flights from \"./containers/Flights\";\nimport Hotels from \"./containers/Hotels\";\nimport Bikes from \"./containers/Bikes\";\nimport Hero from \"./components/hero/hero\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n\n      <Switch>\n        <Route exact path=\"/Flights\" component={Flights} />\n        <Route exact path=\"/Hotels\" component={Hotels} />\n        <Route exact path=\"/Bikes\" component={Bikes} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}